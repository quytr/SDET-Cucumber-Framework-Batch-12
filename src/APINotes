Class 01:
Rest assured API
    - It is DSL (domain specific language)
    - It is java based library that is used to automation rest API

BDD:
given, when, then
    Given -- pre condition
    Then -- actions
    Then -- results

Rest assured follows the functionality of BDD:

pre condition - request preparation, request specification

given - prepare the request
when - hitting the end point (send the request)
then - expected response

NOTE: baseURI = baseURL  (URI: Uniform Resource Identifier)
In postman, baseURI = baseURL + endpoint

Hamcrest matchers -
    It is a popular framework that helps us to create the matcher objects.

    prettyPrint - it is used to print the response in console.

***************************************************************************
Class 02:
Recap:
Java rest assured API -
given - prepare the request
when - making a call
then - verification/assertion

***************************************************************************
Class 03:
Recap:
POST -
Base URL = Base URI
end point
Headers
body

then -

-jsonPath()

-to retrieve employee from the database

GET -
query parameter
token

@Test - junit annotation we use to execute our test cases.
@FixMethodOrder() we use to change the flow of execution (Name.Ascending - alphabetical order)

To update the details of the employee
PUT -
body
header
token
end point

200 vs 201

Token should get generated automatically.

********************************************************************************
Class04:
API payload contants - the body we need to create, update employee record, we can pass it from api payload constants class






















